{"version":3,"sources":["context/todos.context.js","hooks/useLocalStorageReducer.js","hooks/useInputState.js","TodoEditForm.js","TodoListItem.js","hooks/useToggleState.js","TodoList.js","TodoForm.js","Todo.js","App.js","index.js"],"names":["initTodos","id","task","completed","todosReducer","state","action","type","uuid","filter","todo","map","newTask","TodosContext","createContext","DispatchContext","TodosProvider","props","key","defaultVal","reducer","useReducer","val","JSON","parse","window","localStorage","getItem","String","e","dispatch","useEffect","setItem","stringify","useLocalStorageReducer","todos","Provider","value","children","initValue","useState","setValue","target","TodoEditForm","toggleEdit","useContext","useInputState","handleChange","reset","onSubmit","preventDefault","style","width","marginLeft","TextField","margin","onChange","fullWidth","autoFocus","memo","setState","toggle","useToggleState","isEditing","ListItem","height","Checkbox","checked","tabIndex","onClick","ListItemText","textDecoration","ListItemSecondaryAction","IconButton","aria-label","TodoList","length","Paper","List","idx","Divider","TodoForm","padding","label","Todo","backgroundColor","elevation","AppBar","color","position","Toolbar","Typography","Grid","container","justify","marginTop","item","xs","md","lg","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.531ca82b.chunk.js","sourcesContent":["import React, { createContext } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport useTodoState from '../hooks/useTodoState';\r\nimport useLocalStorageReducer from '../hooks/useLocalStorageReducer';\r\nconst initTodos = [{ id: 0, task: 'Add your todo', completed: false }];\r\n\r\nconst todosReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TODO':\r\n      return [...state, { id: uuid(), task: action.task, completed: false }];\r\n    case 'REMOVE_TODO':\r\n      return state.filter(todo => todo.id !== action.id);\r\n    case 'TOGGLE_TODO':\r\n      return state.map(todo =>\r\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n      );\r\n    case 'EDIT_TODO':\r\n      return state.map(todo =>\r\n        todo.id === action.id ? { ...todo, task: action.newTask } : todo\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const TodosContext = createContext();\r\nexport const DispatchContext = createContext();\r\n\r\nexport function TodosProvider(props) {\r\n  const [todos, dispatch] = useLocalStorageReducer(\r\n    'todos',\r\n    initTodos,\r\n    todosReducer\r\n  );\r\n  //const todosBundle = useTodoState(initTodos);\r\n\r\n  return (\r\n    <TodosContext.Provider value={todos}>\r\n      <DispatchContext.Provider value={dispatch}>\r\n        {props.children}\r\n      </DispatchContext.Provider>\r\n    </TodosContext.Provider>\r\n  );\r\n}\r\n","import { useReducer, useEffect } from 'react';\r\n\r\nexport default function useLocalStorageReducer(key, defaultVal, reducer) {\r\n  const [state, dispatch] = useReducer(reducer, defaultVal, () => {\r\n    let val;\r\n    try {\r\n      val = JSON.parse(window.localStorage.getItem(key) || String(defaultVal));\r\n    } catch (e) {\r\n      val = defaultVal;\r\n    }\r\n    return val;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, dispatch];\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport default initValue => {\r\n  const [value, setValue] = useState(initValue);\r\n  const handleChange = e => {\r\n    setValue(e.target.value);\r\n  };\r\n  const reset = () => {\r\n    setValue('');\r\n  };\r\n  return [value, handleChange, reset];\r\n};\r\n","import React, { useContext } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport useInputState from './hooks/useInputState';\r\nimport { DispatchContext } from './context/todos.context';\r\n\r\nexport default function TodoEditForm({ id, task, toggleEdit }) {\r\n  const dispatch = useContext(DispatchContext);\r\n  const [value, handleChange, reset] = useInputState(task);\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch({ type: 'EDIT_TODO', id, newTask: value });\r\n    reset();\r\n    toggleEdit();\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit} style={{ width: '50%', marginLeft: '1rem' }}>\r\n      <TextField\r\n        margin=\"normal\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        autoFocus\r\n      />\r\n    </form>\r\n  );\r\n}\r\n","import React, { useContext, memo } from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport useToggleState from './hooks/useToggleState';\r\nimport TodoEditForm from './TodoEditForm';\r\nimport { DispatchContext } from './context/todos.context';\r\n\r\nfunction TodoListItem({ id, task, completed }) {\r\n  const dispatch = useContext(DispatchContext);\r\n  const [isEditing, toggleEdit] = useToggleState(false);\r\n\r\n  return (\r\n    <ListItem style={{ height: '64px' }}>\r\n      {isEditing ? (\r\n        <TodoEditForm id={id} task={task} toggleEdit={toggleEdit} />\r\n      ) : (\r\n        <>\r\n          <Checkbox\r\n            checked={completed}\r\n            tabIndex={-1}\r\n            onClick={() => dispatch({ type: 'TOGGLE_TODO', id })}\r\n          />\r\n          <ListItemText\r\n            style={{ textDecoration: completed ? 'line-through' : '' }}\r\n          >\r\n            {task}\r\n          </ListItemText>\r\n          <ListItemSecondaryAction>\r\n            <IconButton\r\n              aria-label=\"delete\"\r\n              onClick={() => dispatch({ type: 'REMOVE_TODO', id })}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n            <IconButton aria-label=\"edit\" onClick={toggleEdit}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </>\r\n      )}\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nexport default memo(TodoListItem);\r\n","import { useState } from 'react';\r\nexport default function useToggle(initValue = false) {\r\n  const [state, setState] = useState(initValue);\r\n  const toggle = () => {\r\n    setState(!state);\r\n  };\r\n  return [state, toggle];\r\n}\r\n","import React, { Fragment, useContext } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TodoListItem from './TodoListItem';\r\nimport { TodosContext } from './context/todos.context';\r\n\r\nexport default function TodoList() {\r\n  const todos = useContext(TodosContext);\r\n  if (todos.length)\r\n    return (\r\n      <Paper>\r\n        <List>\r\n          {todos.map((todo, idx) => (\r\n            <Fragment key={todo.id}>\r\n              <TodoListItem {...todo} />\r\n              {idx < todos.length - 1 && <Divider />}\r\n            </Fragment>\r\n          ))}\r\n        </List>\r\n      </Paper>\r\n    );\r\n  return null;\r\n}\r\n","import React, { useContext } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport useInputState from './hooks/useInputState';\r\nimport { DispatchContext } from './context/todos.context';\r\n\r\nexport default function TodoForm() {\r\n  const [value, handleChange, reset] = useInputState('');\r\n  const dispatch = useContext(DispatchContext);\r\n  return (\r\n    <Paper style={{ margin: '1rem 0', padding: '0 1rem' }}>\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          dispatch({ type: 'ADD_TODO', task: value });\r\n          reset();\r\n        }}\r\n      >\r\n        <TextField\r\n          value={value}\r\n          onChange={handleChange}\r\n          margin=\"normal\"\r\n          label=\"Add New Todo\"\r\n          fullWidth\r\n        />\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { TodosProvider } from './context/todos.context';\r\nimport TodoList from './TodoList';\r\nimport TodoForm from './TodoForm';\r\n\r\nexport default function Todo() {\r\n  return (\r\n    <Paper\r\n      style={{ width: '100%', height: '100vh', backgroundColor: '#fafafa' }}\r\n      elevation={0}\r\n    >\r\n      <AppBar color=\"primary\" position=\"static\" style={{ height: '64px' }}>\r\n        <Toolbar>\r\n          <Typography color=\"inherit\">TODOS WITH HOOKS</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Grid container justify=\"center\" style={{ marginTop: '1rem' }}>\r\n        <Grid item xs={11} md={8} lg={4}>\r\n          <TodosProvider>\r\n            <TodoForm />\r\n            <TodoList />\r\n          </TodosProvider>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\nimport Todo from './Todo';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}